apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

String APK_NAME = "aa"
int VERSION_CODE = 1
String VERSION_NAME = "0.3.1"

// This line generates the apk with set name.
project.archivesBaseName = APK_NAME + "_v_" + VERSION_NAME;

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"
    dataBinding {
        enabled = true
    }

    defaultConfig {
        applicationId "com.androidarchitecture"
        minSdkVersion 19
        targetSdkVersion 23
        versionCode VERSION_CODE
        versionName VERSION_NAME
    }

    signingConfigs {
        // You must set up an environment var before release signing
        release {
            storeFile file('keystore/release.keystore.jks')
            keyAlias 'androidarchitecture'
            storePassword KEYSTORE_PASSWORD
            keyPassword KEY_PASSWORD
        }

        debug {
            storeFile file('keystore/debug.keystore.jks')
            keyAlias 'androidarchitecture'
            storePassword 'android'
            keyPassword 'android'
        }
    }

    buildTypes {
        //change server url for production and staging and release version. In the example they use
        // same url for each build

        /**
         *  Todo
         *
         * Change base url
         * Change GCM  sender Id
         * Change GCM server key. (Provide the gcm key to backend)
        * */
        release {
            resValue("string", "server_sample_base_url",  "http://private-f7ff9-androidarchitecturetestapi.apiary-mock.com/api/v1/")
            resValue("string", "gcm_sender_id",  "99770304940") // server key: AIzaSyCucrcN50Hxcc-ojBGncGO7TRzGPbBF9tw

            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug_production {
            resValue("string", "server_sample_base_url",  "http://private-f7ff9-androidarchitecturetestapi.apiary-mock.com/api/v1/")
            resValue("string", "gcm_sender_id",  "99770304940") // server key: AIzaSyCucrcN50Hxcc-ojBGncGO7TRzGPbBF9tw

            versionNameSuffix  " debug_production"
            signingConfig signingConfigs.debug
            debuggable true
        }

        debug_staging {
            resValue("string", "server_sample_base_url",  "http://private-f7ff9-androidarchitecturetestapi.apiary-mock.com/api/v1/")
            resValue("string", "gcm_sender_id",  "99770304940")

            versionNameSuffix  " debug_staging"
            signingConfig signingConfigs.debug
            debuggable true
        }
    }

    //Needed because of this https://github.com/square/okio/issues/58
    lintOptions {
        warning 'InvalidPackage'
    }
}

dependencies {
    final SUPPORT_LIBRARY_VERSION = '23.2.0'
    final DBFLOW_VERSION    = '2.2.1'
    final RETROFIT_VERSION  = '2.0.2'
    final DAGGER_VERSION    = '2.1'
    final JOB_QUEUE_VERSION = '1.3.5'
    final HAMCREST_VERSION  = '1.3' // Hamcrest allows checking for conditions in your code via existing matchers classes and allows you to define your custom matcher implementations
    final EVENT_BUS         = '2.4.0'

    def daggerCompiler = "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    def dbFlowCompiler = "com.raizlabs.android:DBFlow-Compiler:$DBFLOW_VERSION"
    def jUnit = "junit:junit:4.12"
    def mockito = "org.mockito:mockito-core:1.10.19"

    // App Dependency
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.2.0'
    compile 'com.android.support:design:23.2.0'
    compile "com.android.support:support-annotations:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:cardview-v7:23.2.0"
    compile "com.raizlabs.android:DBFlow-Core:$DBFLOW_VERSION"
    compile "com.raizlabs.android:DBFlow:$DBFLOW_VERSION"
    compile "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    compile "com.squareup.retrofit2:converter-jackson:$RETROFIT_VERSION"
    compile "com.squareup.retrofit2:adapter-rxjava:$RETROFIT_VERSION"
    compile "com.birbit:android-priority-jobqueue:$JOB_QUEUE_VERSION"
    compile 'com.jakewharton:butterknife:7.0.1'
    compile "de.greenrobot:eventbus:$EVENT_BUS"

    compile  "com.google.dagger:dagger:$DAGGER_VERSION"
    provided 'org.glassfish:javax.annotation:10.0-b28' //Required by Dagger2

    compile 'io.reactivex:rxandroid:1.1.0'
    compile 'io.reactivex:rxjava:1.1.1'
    compile 'com.zekapp.library:progreswheelview:1.1.2'

    // Google Play Services
    compile 'com.google.android.gms:play-services-gcm:8.4.0'

    // Unit tests dependencies
    testCompile jUnit
    testCompile mockito
    testCompile "org.hamcrest:hamcrest-core:$HAMCREST_VERSION"
    testCompile "org.hamcrest:hamcrest-library:$HAMCREST_VERSION"
    testCompile "org.hamcrest:hamcrest-integration:$HAMCREST_VERSION"

    // Logger and prober
    compile 'com.jakewharton.timber:timber:4.1.0'
    compile 'com.facebook.stetho:stetho-okhttp3:1.3.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.0.1'

    // APT dependencies
    apt daggerCompiler
    apt dbFlowCompiler
}
